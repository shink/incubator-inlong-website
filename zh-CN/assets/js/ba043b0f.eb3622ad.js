"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[7205],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return s}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),k=p(n),s=r,N=k["".concat(d,".").concat(s)]||k[s]||c[s]||i;return n?a.createElement(N,o(o({ref:t},m),{},{components:n})):a.createElement(N,o({ref:t},m))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=k;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8831:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return d},default:function(){return s},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),o=["components"],l={title:"Kubernetes \u90e8\u7f72",sidebar_position:3},d=void 0,p={unversionedId:"deployment/k8s",id:"deployment/k8s",title:"Kubernetes \u90e8\u7f72",description:"\u51c6\u5907\u6761\u4ef6",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/deployment/k8s.md",sourceDirName:"deployment",slug:"/deployment/k8s",permalink:"/zh-CN/docs/next/deployment/k8s",editUrl:"https://github.com/apache/incubator-inlong-website/edit/master/docs/deployment/k8s.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Kubernetes \u90e8\u7f72",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Docker \u90e8\u7f72",permalink:"/zh-CN/docs/next/deployment/docker"},next:{title:"Bare Metal \u90e8\u7f72",permalink:"/zh-CN/docs/next/deployment/bare_metal"}},m={},c=[{value:"\u51c6\u5907\u6761\u4ef6",id:"\u51c6\u5907\u6761\u4ef6",level:2},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"\u5378\u8f7d",id:"\u5378\u8f7d",level:2}],k={toc:c};function s(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u51c6\u5907\u6761\u4ef6"},"\u51c6\u5907\u6761\u4ef6"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kubernetes 1.10+"),(0,i.kt)("li",{parentName:"ul"},"Helm 3.0+"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-inlong/tree/master/docker/kubernetes"},"InLong Helm Chart")),(0,i.kt)("li",{parentName:"ul"},"A dynamic provisioner for the PersistentVolumes(",(0,i.kt)("inlineCode",{parentName:"li"},"production environment"),")")),(0,i.kt)("h2",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create namespace inlong\nhelm upgrade inlong --install -n inlong ./\n")),(0,i.kt)("h2",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,i.kt)("p",null,"\u914d\u7f6e\u5185\u5bb9\u90fd\u5728 ",(0,i.kt)("strong",{parentName:"p"},"values.yaml")," \u6587\u4ef6\u4e2d\uff0c\u4ee5\u4e0b\u4e3a\u6240\u6709\u53ef\u914d\u7f6e\u9879\u53ca\u5176\u9ed8\u8ba4\u503c\uff0c\u5305\u62ec\uff1a"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"timezone")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"Asia/Shanghai")),(0,i.kt)("td",{parentName:"tr",align:"center"},"World time and date for cities in all time zones")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"images.pullPolicy")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"IfNotPresent")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Image pull policy. One of ",(0,i.kt)("inlineCode",{parentName:"td"},"Always"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"Never"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"images.<component>.repository")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"},"Docker image repository for the component")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"images.<component>.tag")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"latest")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Docker image tag for the component")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.component")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"},"Component name")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.replicaCount")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"1")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Replicas is the desired number of replicas of a given Template")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.podManagementPolicy")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"OrderedReady")),(0,i.kt)("td",{parentName:"tr",align:"center"},"PodManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.annotations")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"{}")),(0,i.kt)("td",{parentName:"tr",align:"center"},"The ",(0,i.kt)("inlineCode",{parentName:"td"},"annotations")," field can be used to attach arbitrary non-identifying metadata to objects")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.tolerations")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"[]")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Tolerations are applied to pods, and allow (but do not require) the pods to schedule onto nodes with matching taints")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.nodeSelector")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"{}")),(0,i.kt)("td",{parentName:"tr",align:"center"},"You can add the ",(0,i.kt)("inlineCode",{parentName:"td"},"nodeSelector")," field to your Pod specification and specify the node labels you want the target node to have")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.affinity")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"{}")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Node affinity is conceptually similar to nodeSelector, allowing you to constrain which nodes your Pod can be scheduled on based on node labels")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.terminationGracePeriodSeconds")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"30")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Optional duration in seconds the pod needs to terminate gracefully")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.resources")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"{}")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Optionally specify how much of each resource a container needs")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.port(s)")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"},"The port(s) for each component service")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.env")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"{}")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Environment variables for each component container")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("code",null,"\\<component",">",".probe.\\<liveness","|","readiness",">",".enabled")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Turn on and off liveness or readiness probe")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("code",null,"\\<component",">",".probe.\\<liveness","|","readiness",">",".failureThreshold")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"10")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Minimum consecutive successes for the probe")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("code",null,"\\<component",">",".probe.\\<liveness","|","readiness",">",".initialDelaySeconds")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"10")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Delay before the probe is initiated")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("code",null,"\\<component",">",".probe.\\<liveness","|","readiness",">",".periodSeconds")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"30")),(0,i.kt)("td",{parentName:"tr",align:"center"},"How often to perform the probe")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.volumes.name")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"},"Volume name")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.volumes.size")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"10Gi")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Volume size")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.service.annotations")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"{}")),(0,i.kt)("td",{parentName:"tr",align:"center"},"The ",(0,i.kt)("inlineCode",{parentName:"td"},"annotations")," field may need to be set when service.type is ",(0,i.kt)("inlineCode",{parentName:"td"},"LoadBalancer"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.service.type")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"ClusterIP")),(0,i.kt)("td",{parentName:"tr",align:"center"},"The ",(0,i.kt)("inlineCode",{parentName:"td"},"type")," field determines how the service is exposed. Valid options are ",(0,i.kt)("inlineCode",{parentName:"td"},"ClusterIP"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"NodePort"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"LoadBalancer")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"ExternalName"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.service.clusterIP")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"nil")),(0,i.kt)("td",{parentName:"tr",align:"center"},"ClusterIP is the IP address of the service and is usually assigned randomly by the master")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.service.nodePort")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"nil")),(0,i.kt)("td",{parentName:"tr",align:"center"},"NodePort is the port on each node on which this service is exposed when service type is ",(0,i.kt)("inlineCode",{parentName:"td"},"NodePort"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.service.loadBalancerIP")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"nil")),(0,i.kt)("td",{parentName:"tr",align:"center"},"LoadBalancer will get created with the IP specified in this field when service type is ",(0,i.kt)("inlineCode",{parentName:"td"},"LoadBalancer"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.service.externalName")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"nil")),(0,i.kt)("td",{parentName:"tr",align:"center"},"ExternalName is the external reference that kubedns or equivalent will return as a CNAME record for this service, requires service type to be ",(0,i.kt)("inlineCode",{parentName:"td"},"ExternalName"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"<component>.service.externalIPs")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"[]")),(0,i.kt)("td",{parentName:"tr",align:"center"},"ExternalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"external.mysql.enabled")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"center"},"If not exists external MySQL, InLong will use the internal MySQL by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"external.mysql.hostname")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"localhost")),(0,i.kt)("td",{parentName:"tr",align:"center"},"External MySQL hostname")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"external.mysql.port")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"3306")),(0,i.kt)("td",{parentName:"tr",align:"center"},"External MySQL port")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"external.mysql.username")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"root")),(0,i.kt)("td",{parentName:"tr",align:"center"},"External MySQL username")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"external.mysql.password")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"password")),(0,i.kt)("td",{parentName:"tr",align:"center"},"External MySQL password")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"external.pulsar.enabled")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"center"},"If not exists external Pulsar, InLong will use the internal TubeMQ by default")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"external.pulsar.serviceUrl")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"localhost:6650")),(0,i.kt)("td",{parentName:"tr",align:"center"},"External Pulsar service URL")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"external.pulsar.adminUrl")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"localhost:8080")),(0,i.kt)("td",{parentName:"tr",align:"center"},"External Pulsar admin URL")))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The components include ",(0,i.kt)("inlineCode",{parentName:"p"},"agent"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"audit"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dashboard"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dataproxy"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"manager"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tubemq-manager"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tubemq-master"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tubemq-broker"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"zookeeper")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"mysql"),".")),(0,i.kt)("h2",{id:"\u5378\u8f7d"},"\u5378\u8f7d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"helm uninstall inlong -n inlong\n")),(0,i.kt)("p",null,"You can delete all ",(0,i.kt)("inlineCode",{parentName:"p"},"PVC ")," if any persistent volume claims used, it will lose all data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete pvc -n inlong --all\n")))}s.isMDXComponent=!0}}]);